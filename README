BACKEND

-Install elasticsearch 7+  
	to check it's working: curl -X GET "localhost:9200"

-Install redis server

-Install postgres
	apt-get install postgresql libpq-dev

-Create postgres user, password y database.
	sudo su - postgres
	psql
	CREATE USER 'tsa' WITH PASSWORD 'pass';
	CREATE DATABASE ts_django OWNER tsa;

- Install python3.6
	sudo add-apt-repository ppa:deadsnakes/ppa
	sudo apt update
	sudo apt install python3.6 python3.6-dev python3.6-venv

-create a virtual environment 'venv' in the backend directory
	virtualenv --python=python3.6 venv

-Set environmental variables in venv/bin/activate
	DB_NAME='ts_django'
	DB_USER='tsa'
	DB_PASSWORD='pass'
	ELASTIC_DATA_INDEX_PATH= *full path where you store the data files that will be indexed*
	[Optional] TEST_PATH= *full path of algorithm test results* (used to display test results in the UI)

	export DB_NAME='ts_django'
	export DB_USER='tsa'
	export DB_PASSWORD='tsa'
	export ELASTIC_DATA_INDEX_PATH='/home/jmartty/tsa/ts-analysis/tests/data/'

-activate the venv
	source venv/bin/activate	

-install dependencies
  sudo apt install python3-venv python3-pip
  pip install --upgrade pip setuptools wheel
  sudo apt install libblas3 liblapack3 liblapack-dev libblas-dev libfreetype6-dev
	python3 -m pip install -r requirements.txt

-make migrations
	python3 manage.py makemigrations
	python3 manage.py migrate

-run the server
	python3 manage.py runserver 

-run Celery worker in another terminal (activate venv first)
	source venv/bin/activate
	celery worker -A tsa --loglevel=info

-access
	localhost:8000

____________________________________

FRONTEND

-install node and npm
	sudo apt-get install nodejs
	sudo apt install npm

-install dependencies in the frontend directory
	npm install 

-run the app
	npm run dev

-access
	localhost:8080

	
